// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prédio_Comercial.Service;

#nullable disable

namespace PrédioComercial.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250609234426_CorrecaoDeTAbela")]
    partial class CorrecaoDeTAbela
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prédio_Comercial.Models.Acessos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("EntrouComOQue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroSalaComercial")
                        .HasColumnType("int");

                    b.Property<string>("SalaComercial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.Property<int>("VisitanteId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UsuariosId");

                    b.HasIndex("VisitanteId");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("Prédio_Comercial.Models.Proprietarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sala")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("Prédio_Comercial.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Admin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataContratacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Prédio_Comercial.Models.Visitantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dataentrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoVisita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ProprietariosId")
                        .HasColumnType("int");

                    b.Property<string>("VisitandoQuem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProprietariosId");

                    b.ToTable("Visitantes");
                });

            modelBuilder.Entity("Prédio_Comercial.Models.Acessos", b =>
                {
                    b.HasOne("Prédio_Comercial.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prédio_Comercial.Models.Visitantes", "Visitante")
                        .WithMany()
                        .HasForeignKey("VisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");

                    b.Navigation("Visitante");
                });

            modelBuilder.Entity("Prédio_Comercial.Models.Visitantes", b =>
                {
                    b.HasOne("Prédio_Comercial.Models.Proprietarios", "Proprietarios")
                        .WithMany("visitantes")
                        .HasForeignKey("ProprietariosId");

                    b.Navigation("Proprietarios");
                });

            modelBuilder.Entity("Prédio_Comercial.Models.Proprietarios", b =>
                {
                    b.Navigation("visitantes");
                });
#pragma warning restore 612, 618
        }
    }
}
